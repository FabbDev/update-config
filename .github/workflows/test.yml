name: Test
# THIS IS FOR TESTING THE ACTION: DO NOT USE IT IN YOUR DRUPAL PROJECT, USE
# workflow-templates/update-config-branch.yml instead.
#
# Secrets
# - TEST_CONFIG_REPO_TOKEN: A token with write access to the test config repo.
# - TEST_SITE_REPO_TOKEN: A token with write access to the test site repo.
# Variables
# - TEST_CONFIG_REPO: The GitHub config repo for use with the test.
# - TEST_SITE_REPO: The GitHub site repo for use with the test.

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 1 * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: test/update-config

      - uses: ./test/update-config/.github/actions/test-setup
        with:
          test_config_repo: ${{ vars.TEST_CONFIG_REPO }}
          test_config_repo_token: ${{ secrets.TEST_CONFIG_REPO_TOKEN }}
          test_site_repo: ${{ vars.TEST_SITE_REPO }}
          test_site_repo_token: ${{ secrets.TEST_SITE_REPO_TOKEN }}

      - uses: andriokha/auto-config-export@main
        with:
          config_repo: ${{ vars.TEST_CONFIG_REPO }}
          config_repo_token: ${{ secrets.TEST_CONFIG_REPO_TOKEN }}
          site_repo: ${{ vars.TEST_SITE_REPO }}
          site_repo_token: ${{ secrets.TEST_SITE_REPO_TOKEN }}

      - name: Assert the state after running the action
        env:
          GH_TOKEN: ${{ secrets.TEST_SITE_REPO_TOKEN }}
        working-directory: test
        run: |
          # TEST STEP SUMMARY
          set -eux
          exit=0
          cat "$GITHUB_STEP_SUMMARY"
          
          git -C site fetch origin config-only
          git -C remote fetch origin main
          
          if [[ "$(git -C remote rev-parse origin/main)" != "$(git -C site rev-parse origin/config-only)" ]]; then
            echo "The Drupal site repo's config-only branch wasn't in sync with the config repo's main branch." >> "$GITHUB_STEP_SUMMARY"
            exit=1
          fi
          
          cd site
          git fetch
          git checkout staging
          if [[ "$(gh pr list --json id)" != "[]" ]]; then
            echo "There shouldn't be a PR after running the action the first time to create the config-only branch." >> "$GITHUB_STEP_SUMMARY"
            exit=1
          fi
          
          exit $exit
          
      - uses: ./test/update-config/.github/actions/test-teardown

      - uses: ./test/update-config/.github/actions/test-setup
        with:
          test_config_repo: ${{ vars.TEST_CONFIG_REPO }}
          test_config_repo_token: ${{ secrets.TEST_CONFIG_REPO_TOKEN }}
          test_site_repo: ${{ vars.TEST_SITE_REPO }}
          test_site_repo_token: ${{ secrets.TEST_SITE_REPO_TOKEN }}

      # TODO FACTOR OUT COMMON ASSERTIONS, POST TEST NORMALIZATION AND TEAR DOWN.

      - name: 'Test setup for testing creating a PR'
        working-directory: test
        run: |
          cd site
          git remote add remote-config ../remote
          git fetch remote-config
          git checkout -b config-only remote-config/main^
          git rev-parse HEAD
          git push origin HEAD
          git remote -v
          sleep 10

      - uses: andriokha/auto-config-export@main
        with:
          config_repo: ${{ vars.TEST_CONFIG_REPO }}
          config_repo_token: ${{ secrets.TEST_CONFIG_REPO_TOKEN }}
          site_repo: ${{ vars.TEST_SITE_REPO }}
          site_repo_token: ${{ secrets.TEST_SITE_REPO_TOKEN }}

      - name: Assert the state after running the action
        env:
          GH_TOKEN: ${{ secrets.TEST_SITE_REPO_TOKEN }}
        working-directory: test
        run: |
          set -eux
          exit=0
          cat "$GITHUB_STEP_SUMMARY"
          
          git -C site fetch origin config-only
          git -C remote fetch origin main
          
          if [[ "$(git -C remote rev-parse origin/main)" != "$(git -C site rev-parse origin/config-only)" ]]; then
            echo "TEST FAILURE: The Drupal site repo's config-only branch wasn't in sync with the config repo's main branch." >> "$GITHUB_STEP_SUMMARY"
            exit=1
          fi
          
          cd site
          git fetch
          git checkout staging
          if [[ "$(gh pr list --json id)" == "[]" ]]; then
            echo "TEST FAILURE: There should be a PR created." >> "$GITHUB_STEP_SUMMARY"
            exit=1
          fi
          
          exit $exit

        # TEARDOWN DELETE NAY PRS
      - uses: ./test/update-config/.github/actions/test-teardown
