name: Setup for test
description: Prepares test repos for automated testing.

inputs:
  test_config_repo:
    description: The GitHub config repo for use with the test.
    type: string
    required: true
  test_config_repo_token:
    description: A token with write access to the test config repo.
    type: string
    required: true
  test_config_repo_branch:
    description: The main branch on the config repository.
    type: string
    required: true
  test_site_repo:
    description: The GitHub site repo for use with the test.
    type: string
    required: true
  test_site_repo_token:
    description: A token with write access to the test site repo.
    type: string
    required: true
  test_site_repo_config_branch:
    description: The branch on the site repository that mirrors the config repository.
    type: string
    required: true
  test_site_repo_pr_branch:
    description: The name of the topic branch to create on the site repository with config changes.
    type: string
    required: true
  test_site_repo_pr_branch_base:
    description: The branch on the site repository from which to create the PR branch.
    type: string
    required: true

#  DO I WANT?
  branch_prefix:
    description: The prefix used for test branches.
    type: string
    required: true

runs:
  using: composite
  steps:

    - uses: ./test/update-config/.github/actions/test-checkout
      with:
        test_config_repo: ${{ inputs.test_config_repo }}
        test_config_repo_token: ${{ inputs.test_config_repo_token }}
        test_site_repo: ${{ inputs.test_site_repo }}
        test_site_repo_token: ${{ inputs.test_site_repo_token }}

    - name: Setup for test
      shell: bash
      working-directory: test
      run: |
        # Setup for test
        set -eu
        git config --global user.name 'Test User'
        git config --global user.email 'test@example.com'

        pushd remote
        git checkout --orphan ${{ inputs.test_config_repo_branch }}-new
        git rm -rf .
        touch c d
        git add .
        git commit -m "Add initial mock config"
        echo modified > c
        touch e
        git add c e
        git rm d
        git commit -m "Updated"
        git push origin HEAD:${{ inputs.test_config_repo_branch }} --force
        git checkout ${{ inputs.test_config_repo_branch }}
        git reset --hard origin/${{ inputs.test_config_repo_branch }}
        popd

        pushd site
        git checkout --orphan ${{ inputs.test_site_repo_pr_branch_base }}-new
        git rm -rf .
        mkdir -p a z config/sync
        cp -r ../remote/* config/sync
        touch {a,z}/.gitkeep b
        git config user.name 'Test User'
        git config user.email 'test@example.com'
        git add .
        git commit -m "Add mock Drupal site"
        
        echo modified > config/sync/e
        git add config/sync
        git commit -m "Simulate updating config during development"
        git push origin HEAD:${{ inputs.test_site_repo_pr_branch_base }} --force
        
        git checkout ${{ inputs.test_site_repo_pr_branch_base }}
        git reset --hard origin/${{ inputs.test_site_repo_pr_branch_base }}
        popd
